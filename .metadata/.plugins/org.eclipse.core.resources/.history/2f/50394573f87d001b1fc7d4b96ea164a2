package q1.extract_method.refactored;

import java.util.List;

import q1.extract_method.org.Edge;
import q1.extract_method.org.Node;

public class A {
   Node m1(List<Node> nodes, String p) {
	   for (Node node : nodes) {
		   check(node.name, p, node);
	   }
      // other implementation
      return null;
   }

   Edge m2(List<Edge> edgeList, String p) {
	   for (Edge edge : edgeList) {
		   check(edge.name, p, edge);
	   }
      // other implementation
      return null;
   }

   private <E> void check(String name, String p, E object) {
	   if(name.contains(p)) {
		   System.out.println()
	   }
   }
   
   
   
   
}

class Node {
   String name;

   public boolean contains(String p) {
      return name.contains(p);
   }
}

class Edge {
   String name;

   public boolean contains(String p) {
       return name.contains(p);
   }
}